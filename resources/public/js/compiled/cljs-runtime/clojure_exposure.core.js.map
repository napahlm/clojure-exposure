{"version":3,"sources":["clojure_exposure/core.cljs"],"mappings":";AAWA,kCAAA,lCAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,mCAAA,nCAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,yCAAiBJ;;AAEnC,6BAAA,7BAAMK;AAAN,AACE,AAACC;;AACD,4BAAA,mFAAA,/GAACC;;AACD,AAACZ;;AACD,OAACG","names":["clojure-exposure.core/dev-setup","clojure-exposure.config/debug?","cljs.core.println","clojure-exposure.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","clojure-exposure.views/main-view","clojure-exposure.core/init","clojure-exposure.routes/start!","re-frame.core/dispatch-sync"],"sourcesContent":["(ns clojure-exposure.core\r\n  (:require\r\n   [reagent.dom :as rdom]\r\n   [re-frame.core :as re-frame]\r\n   [clojure-exposure.events :as events]\r\n   [clojure-exposure.routes :as routes]\r\n   [clojure-exposure.views :as views]\r\n   [clojure-exposure.config :as config]\r\n   ))\r\n\r\n\r\n(defn dev-setup []\r\n  (when config/debug?\r\n    (println \"dev mode\")))\r\n\r\n(defn ^:dev/after-load mount-root []\r\n  (re-frame/clear-subscription-cache!)\r\n  (let [root-el (.getElementById js/document \"app\")]\r\n    (rdom/unmount-component-at-node root-el)\r\n    (rdom/render [views/main-view] root-el)))\r\n\r\n(defn init []\r\n  (routes/start!)\r\n  (re-frame/dispatch-sync [::events/initialize-db])\r\n  (dev-setup)\r\n  (mount-root))\r\n"]}